{"version":3,"sources":["webpack://wp.[name]/webpack/bootstrap","webpack://wp.[name]/./src/constants/leadinConfig.js","webpack://wp.[name]/./node_modules/raven-js/src/utils.js","webpack://wp.[name]/./node_modules/raven-js/src/raven.js","webpack://wp.[name]/./node_modules/raven-js/vendor/TraceKit/tracekit.js","webpack://wp.[name]/./node_modules/raven-js/vendor/json-stringify-safe/stringify.js","webpack://wp.[name]/./node_modules/raven-js/src/configError.js","webpack://wp.[name]/./node_modules/raven-js/src/console.js","webpack://wp.[name]/external \"jQuery\"","webpack://wp.[name]/./src/lib/Raven.js","webpack://wp.[name]/./src/constants/selectors.js","webpack://wp.[name]/./src/feedback/ThickBoxModal.js","webpack://wp.[name]/./src/feedback/feedbackFormApi.js","webpack://wp.[name]/./src/feedback/feedback.js","webpack://wp.[name]/./node_modules/raven-js/src/singleton.js","webpack://wp.[name]/(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","leadinConfig","adminUrl","ajaxUrl","env","formsScript","formsScriptPayload","hubspotBaseUrl","leadinPluginVersion","pluginPath","nonce","plugins","phpVersion","portalId","routes","wpVersion","theme","portalDomain","pricingQuery","i18n","leadinI18n","global","_window","self","isUndefined","what","isString","toString","supportsErrorEvent","ErrorEvent","e","each","obj","callback","j","length","hasKey","htmlElementAsString","elem","className","classes","attr","out","tagName","push","toLowerCase","id","split","attrWhitelist","getAttribute","join","isOnlyOneTruthy","a","b","isSameStacktrace","stack1","stack2","frames1","frames","frames2","filename","lineno","colno","isObject","isError","Error","isErrorEvent","isFunction","isEmptyObject","_","wrappedCallback","data","original","normalizedData","objectMerge","obj1","obj2","truncate","str","max","substr","objectFrozen","isFrozen","joinRegExp","patterns","pattern","sources","len","replace","source","RegExp","urlencode","pairs","encodeURIComponent","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","Math","random","htmlTreeAsString","nextStr","height","sepLength","parentNode","reverse","isSameException","ex1","ex2","values","type","stacktrace","parseUrl","url","match","query","fragment","protocol","host","path","relative","fill","replacement","track","orig","TraceKit","stringify","RavenConfigError","utils","wrapConsoleMethod","wrapMethod","dsnKeys","dsnPattern","now","Date","_document","document","_navigator","navigator","keepOriginalCallback","Raven","method","this","_hasJSON","JSON","_hasDocument","_hasNavigator","_lastCapturedException","_lastData","_lastEventId","_globalServer","_globalKey","_globalProject","_globalContext","_globalOptions","logger","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","collectWindowErrors","maxMessageLength","maxUrlLength","stackTraceLimit","autoBreadcrumbs","instrument","sampleRate","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","_originalConsole","console","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_lastCapturedEvent","_keypressTimeout","_location","location","_lastHref","href","_resetBackoff","VERSION","debug","config","dsn","options","_logDebug","globalOptions","setDSN","maxBreadcrumbs","min","autoBreadcrumbDefaults","xhr","dom","instrumentDefaults","tryCatch","install","isSetup","report","subscribe","_handleOnErrorStackInfo","apply","arguments","_instrumentTryCatch","_instrumentBreadcrumbs","_drainPlugins","uri","_parseDSN","lastSlash","lastIndexOf","_dsn","user","_globalSecret","pass","_getGlobalServer","_globalEndpoint","context","func","args","undefined","wrap","_before","__raven__","__raven_wrapper__","wrapped","deep","_ignoreNextOnError","captureException","__inner__","uninstall","_restoreBuiltIns","ex","isNotError","isNotErrorEvent","isErrorEventWithoutError","error","captureMessage","trimHeadFrames","stack","computeStackTrace","_handleStackInfo","msg","test","message","initialCall","fileurl","fingerprint","_prepareFrames","_send","captureBreadcrumb","crumb","timestamp","breadcrumbCallback","result","shift","addPlugin","plugin","pluginArgs","slice","setUserContext","setExtraContext","extra","_mergeContext","setTagsContext","tags","clearContext","getContext","parse","setEnvironment","environment","setRelease","release","setDataCallback","dataCallback","setBreadcrumbCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastException","lastEventId","ravenNotConfiguredError","afterLoad","RavenConfig","showReportDialog","eventId","encode","qs","email","globalServer","script","createElement","async","src","head","body","appendChild","setTimeout","_triggerEvent","eventType","evt","toUpperCase","createEvent","initEvent","createEventObject","dispatchEvent","fireEvent","_breadcrumbEventHandler","evtName","target","category","_keypressEventHandler","isContentEditable","timeout","clearTimeout","_captureUrlChange","from","to","parsedLoc","parsedTo","parsedFrom","wrappedBuiltIns","wrapTimeFn","fn","Array","originalCallback","wrapEventTarget","proto","capture","secure","handleEvent","err","before","clickHandler","keypressHandler","requestAnimationFrame","cb","eventTargets","wrapProp","prop","xhrproto","XMLHttpRequest","origOpen","indexOf","__raven_xhr","status_code","origSend","onreadystatechangeHandler","readyState","status","props","onreadystatechange","origFetch","fetchInput","Request","fetchData","then","response","addEventListener","attachEvent","chrome","hasPushAndReplaceState","app","runtime","history","pushState","replaceState","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","origHistFunction","log","consoleMethodCallback","level","builtin","installer","concat","exec","allowSecretKey","port","stackInfo","_processException","frame","_normalizeFrame","in_app","stackInfoUrl","normalized","line","column","function","prefixedMessage","exception","culprit","_trimPacket","request","Referer","breadcrumbs","_trimBreadcrumbs","urlProp","urlProps","_getHttpData","httpData","userAgent","headers","User-Agent","referrer","_backoffDuration","_backoffStart","_shouldBackoff","_isRepeatData","current","last","_setBackoffState","retry","getResponseHeader","parseInt","baseData","project","platform","serverName","server_name","_sendProcessedPayload","_getUuid","allowDuplicates","event_id","auth","sentry_version","sentry_client","sentry_key","sentry_secret","_makeRequest","onSuccess","onError","opts","XDomainRequest","onload","onerror","open","send","Function","setUser","setReleaseContext","_slice","UNKNOWN_FUNCTION","ERROR_TYPES_RE","getLocationHref","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastArgs","lastExceptionStack","notifyHandlers","isWindowError","inner","traceKitWindowOnError","lineNo","colNo","augmentStackTraceWithInitialElement","processLastException","groups","_lastExceptionStack","_lastArgs","rethrow","incomplete","handler","unsubscribe","splice","computeStackTraceFromStackProp","submatch","parts","element","gecko","winjs","geckoEval","chromeEval","lines","isNative","columnNumber","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","item","functionName","funcs","recursion","curr","caller","input","substring","sourceURL","fileName","lineNumber","description","haystack","needle","serializer","replacer","cycleReplacer","keys","thisPos","Infinity","stringifyError","spaces","getSerialize","constructor","originalConsoleLevel","originalConsole","sentryLevel","__webpack_exports__","configureRaven","raven_js__WEBPACK_IMPORTED_MODULE_0__","raven_js__WEBPACK_IMPORTED_MODULE_0___default","_constants_leadinConfig__WEBPACK_IMPORTED_MODULE_1__","leadin","php","wordpress","hub","map","Version","domElements","iframe","subMenuButtons","deactivatePluginButton","deactivateFeedbackForm","deactivateFeedbackSubmit","deactivateFeedbackSkip","thickboxModalClose","thickboxModalWindow","thickboxModalContent","ThickBoxModal","openTriggerSelector","inlineContentId","windowCssClass","contentCssClass","_classCallCheck","$","click","init","tb_remove","tb_show","addClass","unbind","close","preventDefault","formSubmissionUrl","deactivatePlugin","submitAndDeactivate","formSelector","formSubmissionPayload","fields","serializeArray","skipValidation","Promise","resolve","reject","ajax","contentType","success","submit","ready","RavenConstructor","_Raven","noConflict","g"],"mappings":"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","file":"feedback.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 50);\n","const {\n  adminUrl,\n  ajaxUrl,\n  env,\n  formsScript,\n  formsScriptPayload,\n  hubspotBaseUrl,\n  leadinPluginVersion,\n  pluginPath,\n  nonce,\n  plugins,\n  phpVersion,\n  portalId,\n  routes,\n  theme,\n  wpVersion,\n  portalDomain,\n  pricingQuery,\n} = window.leadinConfig;\n\nconst i18n = window.leadinI18n;\n\nexport {\n  adminUrl,\n  ajaxUrl,\n  env,\n  formsScript,\n  formsScriptPayload,\n  hubspotBaseUrl,\n  i18n,\n  leadinPluginVersion,\n  pluginPath,\n  nonce,\n  plugins,\n  phpVersion,\n  portalId,\n  routes,\n  theme,\n  wpVersion,\n  portalDomain,\n  pricingQuery,\n};\n","var _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction isObject(what) {\n  return typeof what === 'object' && what !== null;\n}\n\n// Yanked from https://git.io/vS8DV re-used under CC0\n// with some tiny modifications\nfunction isError(value) {\n  switch ({}.toString.call(value)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return value instanceof Error;\n  }\n}\n\nfunction isErrorEvent(value) {\n  return supportsErrorEvent() && {}.toString.call(value) === '[object ErrorEvent]';\n}\n\nfunction isUndefined(what) {\n  return what === void 0;\n}\n\nfunction isFunction(what) {\n  return typeof what === 'function';\n}\n\nfunction isString(what) {\n  return Object.prototype.toString.call(what) === '[object String]';\n}\n\nfunction isEmptyObject(what) {\n  for (var _ in what) return false; // eslint-disable-line guard-for-in, no-unused-vars\n  return true;\n}\n\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent(''); // eslint-disable-line no-new\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction wrappedCallback(callback) {\n  function dataCallback(data, original) {\n    var normalizedData = callback(data) || data;\n    if (original) {\n      return original(normalizedData) || normalizedData;\n    }\n    return normalizedData;\n  }\n\n  return dataCallback;\n}\n\nfunction each(obj, callback) {\n  var i, j;\n\n  if (isUndefined(obj.length)) {\n    for (i in obj) {\n      if (hasKey(obj, i)) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  } else {\n    j = obj.length;\n    if (j) {\n      for (i = 0; i < j; i++) {\n        callback.call(null, i, obj[i]);\n      }\n    }\n  }\n}\n\nfunction objectMerge(obj1, obj2) {\n  if (!obj2) {\n    return obj1;\n  }\n  each(obj2, function(key, value) {\n    obj1[key] = value;\n  });\n  return obj1;\n}\n\n/**\n * This function is only used for react-native.\n * react-native freezes object that have already been sent over the\n * js bridge. We need this function in order to check if the object is frozen.\n * So it's ok that objectFrozen returns false if Object.isFrozen is not\n * supported because it's not relevant for other \"platforms\". See related issue:\n * https://github.com/getsentry/react-native-sentry/issues/57\n */\nfunction objectFrozen(obj) {\n  if (!Object.isFrozen) {\n    return false;\n  }\n  return Object.isFrozen(obj);\n}\n\nfunction truncate(str, max) {\n  return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n  // Combine an array of regular expressions and strings into one large regexp\n  // Be mad.\n  var sources = [],\n    i = 0,\n    len = patterns.length,\n    pattern;\n\n  for (; i < len; i++) {\n    pattern = patterns[i];\n    if (isString(pattern)) {\n      // If it's a string, we need to escape it\n      // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n      sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n    } else if (pattern && pattern.source) {\n      // If it's a regexp already, we want to extract the source\n      sources.push(pattern.source);\n    }\n    // Intentionally skip other cases\n  }\n  return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n  var pairs = [];\n  each(o, function(key, value) {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n  });\n  return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n  if (!match) return {};\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    protocol: match[2],\n    host: match[4],\n    path: match[5],\n    relative: match[5] + query + fragment // everything minus origin\n  };\n}\nfunction uuid4() {\n  var crypto = _window.crypto || _window.msCrypto;\n\n  if (!isUndefined(crypto) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    // eslint-disable-next-line no-undef\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    var pad = function(num) {\n      var v = num.toString(16);\n      while (v.length < 4) {\n        v = '0' + v;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) +\n      pad(arr[1]) +\n      pad(arr[2]) +\n      pad(arr[3]) +\n      pad(arr[4]) +\n      pad(arr[5]) +\n      pad(arr[6]) +\n      pad(arr[7])\n    );\n  } else {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = (Math.random() * 16) | 0,\n        v = c === 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n  /* eslint no-extra-parens:0*/\n  var MAX_TRAVERSE_HEIGHT = 5,\n    MAX_OUTPUT_LEN = 80,\n    out = [],\n    height = 0,\n    len = 0,\n    separator = ' > ',\n    sepLength = separator.length,\n    nextStr;\n\n  while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = htmlElementAsString(elem);\n    // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n    if (\n      nextStr === 'html' ||\n      (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)\n    ) {\n      break;\n    }\n\n    out.push(nextStr);\n\n    len += nextStr.length;\n    elem = elem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n  var out = [],\n    className,\n    classes,\n    key,\n    attr,\n    i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n  if (elem.id) {\n    out.push('#' + elem.id);\n  }\n\n  className = elem.className;\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n    for (i = 0; i < classes.length; i++) {\n      out.push('.' + classes[i]);\n    }\n  }\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push('[' + key + '=\"' + attr + '\"]');\n    }\n  }\n  return out.join('');\n}\n\n/**\n * Returns true if either a OR b is truthy, but not both\n */\nfunction isOnlyOneTruthy(a, b) {\n  return !!(!!a ^ !!b);\n}\n\n/**\n * Returns true if the two input exception interfaces have the same content\n */\nfunction isSameException(ex1, ex2) {\n  if (isOnlyOneTruthy(ex1, ex2)) return false;\n\n  ex1 = ex1.values[0];\n  ex2 = ex2.values[0];\n\n  if (ex1.type !== ex2.type || ex1.value !== ex2.value) return false;\n\n  return isSameStacktrace(ex1.stacktrace, ex2.stacktrace);\n}\n\n/**\n * Returns true if the two input stack trace interfaces have the same content\n */\nfunction isSameStacktrace(stack1, stack2) {\n  if (isOnlyOneTruthy(stack1, stack2)) return false;\n\n  var frames1 = stack1.frames;\n  var frames2 = stack2.frames;\n\n  // Exit early if frame count differs\n  if (frames1.length !== frames2.length) return false;\n\n  // Iterate through every frame; bail out if anything differs\n  var a, b;\n  for (var i = 0; i < frames1.length; i++) {\n    a = frames1[i];\n    b = frames2[i];\n    if (\n      a.filename !== b.filename ||\n      a.lineno !== b.lineno ||\n      a.colno !== b.colno ||\n      a['function'] !== b['function']\n    )\n      return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  if (track) {\n    track.push([obj, name, orig]);\n  }\n}\n\nmodule.exports = {\n  isObject: isObject,\n  isError: isError,\n  isErrorEvent: isErrorEvent,\n  isUndefined: isUndefined,\n  isFunction: isFunction,\n  isString: isString,\n  isEmptyObject: isEmptyObject,\n  supportsErrorEvent: supportsErrorEvent,\n  wrappedCallback: wrappedCallback,\n  each: each,\n  objectMerge: objectMerge,\n  truncate: truncate,\n  objectFrozen: objectFrozen,\n  hasKey: hasKey,\n  joinRegExp: joinRegExp,\n  urlencode: urlencode,\n  uuid4: uuid4,\n  htmlTreeAsString: htmlTreeAsString,\n  htmlElementAsString: htmlElementAsString,\n  isSameException: isSameException,\n  isSameStacktrace: isSameStacktrace,\n  parseUrl: parseUrl,\n  fill: fill\n};\n","/*global XDomainRequest:false */\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar stringify = require('../vendor/json-stringify-safe/stringify');\nvar RavenConfigError = require('./configError');\n\nvar utils = require('./utils');\nvar isError = utils.isError;\nvar isObject = utils.isObject;\nvar isObject = utils.isObject;\nvar isErrorEvent = utils.isErrorEvent;\nvar isUndefined = utils.isUndefined;\nvar isFunction = utils.isFunction;\nvar isString = utils.isString;\nvar isEmptyObject = utils.isEmptyObject;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar objectFrozen = utils.objectFrozen;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar isSameException = utils.isSameException;\nvar isSameStacktrace = utils.isSameStacktrace;\nvar parseUrl = utils.parseUrl;\nvar fill = utils.fill;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n  dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n  return +new Date();\n}\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _document = _window.document;\nvar _navigator = _window.navigator;\n\nfunction keepOriginalCallback(original, callback) {\n  return isFunction(callback)\n    ? function(data) {\n        return callback(data, original);\n      }\n    : callback;\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n  this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n  // Raven can run in contexts where there's no document (react-native)\n  this._hasDocument = !isUndefined(_document);\n  this._hasNavigator = !isUndefined(_navigator);\n  this._lastCapturedException = null;\n  this._lastData = null;\n  this._lastEventId = null;\n  this._globalServer = null;\n  this._globalKey = null;\n  this._globalProject = null;\n  this._globalContext = {};\n  this._globalOptions = {\n    logger: 'javascript',\n    ignoreErrors: [],\n    ignoreUrls: [],\n    whitelistUrls: [],\n    includePaths: [],\n    collectWindowErrors: true,\n    maxMessageLength: 0,\n\n    // By default, truncates URL values to 250 chars\n    maxUrlLength: 250,\n    stackTraceLimit: 50,\n    autoBreadcrumbs: true,\n    instrument: true,\n    sampleRate: 1\n  };\n  this._ignoreOnError = 0;\n  this._isRavenInstalled = false;\n  this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n  // capture references to window.console *and* all its methods first\n  // before the console plugin has a chance to monkey patch\n  this._originalConsole = _window.console || {};\n  this._originalConsoleMethods = {};\n  this._plugins = [];\n  this._startTime = now();\n  this._wrappedBuiltIns = [];\n  this._breadcrumbs = [];\n  this._lastCapturedEvent = null;\n  this._keypressTimeout;\n  this._location = _window.location;\n  this._lastHref = this._location && this._location.href;\n  this._resetBackoff();\n\n  // eslint-disable-next-line guard-for-in\n  for (var method in this._originalConsole) {\n    this._originalConsoleMethods[method] = this._originalConsole[method];\n  }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n  // Hardcode version string so that raven source can be loaded directly via\n  // webpack (using a build step causes webpack #1617). Grunt verifies that\n  // this value matches package.json during build.\n  //   See: https://github.com/getsentry/raven-js/issues/465\n  VERSION: '3.19.1',\n\n  debug: false,\n\n  TraceKit: TraceKit, // alias to TraceKit\n\n  /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Set of global options [optional]\n     * @return {Raven}\n     */\n  config: function(dsn, options) {\n    var self = this;\n\n    if (self._globalServer) {\n      this._logDebug('error', 'Error: Raven has already been configured');\n      return self;\n    }\n    if (!dsn) return self;\n\n    var globalOptions = self._globalOptions;\n\n    // merge in options\n    if (options) {\n      each(options, function(key, value) {\n        // tags and extra are special and need to be put into context\n        if (key === 'tags' || key === 'extra' || key === 'user') {\n          self._globalContext[key] = value;\n        } else {\n          globalOptions[key] = value;\n        }\n      });\n    }\n\n    self.setDSN(dsn);\n\n    // \"Script error.\" is hard coded into browsers for errors that it can't read.\n    // this is the result of a script being pulled in from an external domain and CORS.\n    globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n    globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n    // join regexp rules into one big rule\n    globalOptions.ignoreErrors = joinRegExp(globalOptions.ignoreErrors);\n    globalOptions.ignoreUrls = globalOptions.ignoreUrls.length\n      ? joinRegExp(globalOptions.ignoreUrls)\n      : false;\n    globalOptions.whitelistUrls = globalOptions.whitelistUrls.length\n      ? joinRegExp(globalOptions.whitelistUrls)\n      : false;\n    globalOptions.includePaths = joinRegExp(globalOptions.includePaths);\n    globalOptions.maxBreadcrumbs = Math.max(\n      0,\n      Math.min(globalOptions.maxBreadcrumbs || 100, 100)\n    ); // default and hard limit is 100\n\n    var autoBreadcrumbDefaults = {\n      xhr: true,\n      console: true,\n      dom: true,\n      location: true\n    };\n\n    var autoBreadcrumbs = globalOptions.autoBreadcrumbs;\n    if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n      autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n    } else if (autoBreadcrumbs !== false) {\n      autoBreadcrumbs = autoBreadcrumbDefaults;\n    }\n    globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n    var instrumentDefaults = {\n      tryCatch: true\n    };\n\n    var instrument = globalOptions.instrument;\n    if ({}.toString.call(instrument) === '[object Object]') {\n      instrument = objectMerge(instrumentDefaults, instrument);\n    } else if (instrument !== false) {\n      instrument = instrumentDefaults;\n    }\n    globalOptions.instrument = instrument;\n\n    TraceKit.collectWindowErrors = !!globalOptions.collectWindowErrors;\n\n    // return for chaining\n    return self;\n  },\n\n  /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n  install: function() {\n    var self = this;\n    if (self.isSetup() && !self._isRavenInstalled) {\n      TraceKit.report.subscribe(function() {\n        self._handleOnErrorStackInfo.apply(self, arguments);\n      });\n      if (self._globalOptions.instrument && self._globalOptions.instrument.tryCatch) {\n        self._instrumentTryCatch();\n      }\n\n      if (self._globalOptions.autoBreadcrumbs) self._instrumentBreadcrumbs();\n\n      // Install all of the plugins\n      self._drainPlugins();\n\n      self._isRavenInstalled = true;\n    }\n\n    Error.stackTraceLimit = self._globalOptions.stackTraceLimit;\n    return this;\n  },\n\n  /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n  setDSN: function(dsn) {\n    var self = this,\n      uri = self._parseDSN(dsn),\n      lastSlash = uri.path.lastIndexOf('/'),\n      path = uri.path.substr(1, lastSlash);\n\n    self._dsn = dsn;\n    self._globalKey = uri.user;\n    self._globalSecret = uri.pass && uri.pass.substr(1);\n    self._globalProject = uri.path.substr(lastSlash + 1);\n\n    self._globalServer = self._getGlobalServer(uri);\n\n    self._globalEndpoint =\n      self._globalServer + '/' + path + 'api/' + self._globalProject + '/store/';\n\n    // Reset backoff state since we may be pointing at a\n    // new project/server\n    this._resetBackoff();\n  },\n\n  /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n  context: function(options, func, args) {\n    if (isFunction(options)) {\n      args = func || [];\n      func = options;\n      options = undefined;\n    }\n\n    return this.wrap(options, func).apply(this, args);\n  },\n\n  /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} func A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n  wrap: function(options, func, _before) {\n    var self = this;\n    // 1 argument has been passed, and it's not a function\n    // so just return it\n    if (isUndefined(func) && !isFunction(options)) {\n      return options;\n    }\n\n    // options is optional\n    if (isFunction(options)) {\n      func = options;\n      options = undefined;\n    }\n\n    // At this point, we've passed along 2 arguments, and the second one\n    // is not a function either, so we'll just return the second argument.\n    if (!isFunction(func)) {\n      return func;\n    }\n\n    // We don't wanna wrap it twice!\n    try {\n      if (func.__raven__) {\n        return func;\n      }\n\n      // If this has already been wrapped in the past, return that\n      if (func.__raven_wrapper__) {\n        return func.__raven_wrapper__;\n      }\n    } catch (e) {\n      // Just accessing custom props in some Selenium environments\n      // can cause a \"Permission denied\" exception (see raven-js#495).\n      // Bail on wrapping and return the function as-is (defers to window.onerror).\n      return func;\n    }\n\n    function wrapped() {\n      var args = [],\n        i = arguments.length,\n        deep = !options || (options && options.deep !== false);\n\n      if (_before && isFunction(_before)) {\n        _before.apply(this, arguments);\n      }\n\n      // Recursively wrap all of a function's arguments that are\n      // functions themselves.\n      while (i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n      try {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means Raven caught an error invoking your application code. This is\n        //       expected behavior and NOT indicative of a bug with Raven.js.\n        return func.apply(this, args);\n      } catch (e) {\n        self._ignoreNextOnError();\n        self.captureException(e, options);\n        throw e;\n      }\n    }\n\n    // copy over properties of the old function\n    for (var property in func) {\n      if (hasKey(func, property)) {\n        wrapped[property] = func[property];\n      }\n    }\n    wrapped.prototype = func.prototype;\n\n    func.__raven_wrapper__ = wrapped;\n    // Signal that this function has been wrapped already\n    // for both debugging and to prevent it to being wrapped twice\n    wrapped.__raven__ = true;\n    wrapped.__inner__ = func;\n\n    return wrapped;\n  },\n\n  /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n  uninstall: function() {\n    TraceKit.report.uninstall();\n\n    this._restoreBuiltIns();\n\n    Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n    this._isRavenInstalled = false;\n\n    return this;\n  },\n\n  /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n  captureException: function(ex, options) {\n    // Cases for sending ex as a message, rather than an exception\n    var isNotError = !isError(ex);\n    var isNotErrorEvent = !isErrorEvent(ex);\n    var isErrorEventWithoutError = isErrorEvent(ex) && !ex.error;\n\n    if ((isNotError && isNotErrorEvent) || isErrorEventWithoutError) {\n      return this.captureMessage(\n        ex,\n        objectMerge(\n          {\n            trimHeadFrames: 1,\n            stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\n          },\n          options\n        )\n      );\n    }\n\n    // Get actual Error from ErrorEvent\n    if (isErrorEvent(ex)) ex = ex.error;\n\n    // Store the raw exception object for potential debugging and introspection\n    this._lastCapturedException = ex;\n\n    // TraceKit.report will re-raise any exception passed to it,\n    // which means you have to wrap it in try/catch. Instead, we\n    // can wrap it here and only re-raise if TraceKit.report\n    // raises an exception different from the one we asked to\n    // report on.\n    try {\n      var stack = TraceKit.computeStackTrace(ex);\n      this._handleStackInfo(stack, options);\n    } catch (ex1) {\n      if (ex !== ex1) {\n        throw ex1;\n      }\n    }\n\n    return this;\n  },\n\n  /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n  captureMessage: function(msg, options) {\n    // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n    // early call; we'll error on the side of logging anything called before configuration since it's\n    // probably something you should see:\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      this._globalOptions.ignoreErrors.test(msg)\n    ) {\n      return;\n    }\n\n    options = options || {};\n\n    var data = objectMerge(\n      {\n        message: msg + '' // Make sure it's actually a string\n      },\n      options\n    );\n\n    var ex;\n    // Generate a \"synthetic\" stack trace from this point.\n    // NOTE: If you are a Sentry user, and you are seeing this stack frame, it is NOT indicative\n    //       of a bug with Raven.js. Sentry generates synthetic traces either by configuration,\n    //       or if it catches a thrown object without a \"stack\" property.\n    try {\n      throw new Error(msg);\n    } catch (ex1) {\n      ex = ex1;\n    }\n\n    // null exception name so `Error` isn't prefixed to msg\n    ex.name = null;\n    var stack = TraceKit.computeStackTrace(ex);\n\n    // stack[0] is `throw new Error(msg)` call itself, we are interested in the frame that was just before that, stack[1]\n    var initialCall = stack.stack[1];\n\n    var fileurl = (initialCall && initialCall.url) || '';\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (this._globalOptions.stacktrace || (options && options.stacktrace)) {\n      options = objectMerge(\n        {\n          // fingerprint on msg, not stack trace (legacy behavior, could be\n          // revisited)\n          fingerprint: msg,\n          // since we know this is a synthetic trace, the top N-most frames\n          // MUST be from Raven.js, so mark them as in_app later by setting\n          // trimHeadFrames\n          trimHeadFrames: (options.trimHeadFrames || 0) + 1\n        },\n        options\n      );\n\n      var frames = this._prepareFrames(stack, options);\n      data.stacktrace = {\n        // Sentry expects frames oldest to newest\n        frames: frames.reverse()\n      };\n    }\n\n    // Fire away!\n    this._send(data);\n\n    return this;\n  },\n\n  captureBreadcrumb: function(obj) {\n    var crumb = objectMerge(\n      {\n        timestamp: now() / 1000\n      },\n      obj\n    );\n\n    if (isFunction(this._globalOptions.breadcrumbCallback)) {\n      var result = this._globalOptions.breadcrumbCallback(crumb);\n\n      if (isObject(result) && !isEmptyObject(result)) {\n        crumb = result;\n      } else if (result === false) {\n        return this;\n      }\n    }\n\n    this._breadcrumbs.push(crumb);\n    if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n      this._breadcrumbs.shift();\n    }\n    return this;\n  },\n\n  addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n    var pluginArgs = [].slice.call(arguments, 1);\n\n    this._plugins.push([plugin, pluginArgs]);\n    if (this._isRavenInstalled) {\n      this._drainPlugins();\n    }\n\n    return this;\n  },\n\n  /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n  setUserContext: function(user) {\n    // Intentionally do not merge here since that's an unexpected behavior.\n    this._globalContext.user = user;\n\n    return this;\n  },\n\n  /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n  setExtraContext: function(extra) {\n    this._mergeContext('extra', extra);\n\n    return this;\n  },\n\n  /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n  setTagsContext: function(tags) {\n    this._mergeContext('tags', tags);\n\n    return this;\n  },\n\n  /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n  clearContext: function() {\n    this._globalContext = {};\n\n    return this;\n  },\n\n  /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n  getContext: function() {\n    // lol javascript\n    return JSON.parse(stringify(this._globalContext));\n  },\n\n  /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n  setEnvironment: function(environment) {\n    this._globalOptions.environment = environment;\n\n    return this;\n  },\n\n  /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n  setRelease: function(release) {\n    this._globalOptions.release = release;\n\n    return this;\n  },\n\n  /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n  setDataCallback: function(callback) {\n    var original = this._globalOptions.dataCallback;\n    this._globalOptions.dataCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the breadcrumbCallback option\n     *\n     * @param {function} callback The callback to run which allows filtering\n     *                            or mutating breadcrumbs\n     * @return {Raven}\n     */\n  setBreadcrumbCallback: function(callback) {\n    var original = this._globalOptions.breadcrumbCallback;\n    this._globalOptions.breadcrumbCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n  setShouldSendCallback: function(callback) {\n    var original = this._globalOptions.shouldSendCallback;\n    this._globalOptions.shouldSendCallback = keepOriginalCallback(original, callback);\n    return this;\n  },\n\n  /**\n     * Override the default HTTP transport mechanism that transmits data\n     * to the Sentry server.\n     *\n     * @param {function} transport Function invoked instead of the default\n     *                             `makeRequest` handler.\n     *\n     * @return {Raven}\n     */\n  setTransport: function(transport) {\n    this._globalOptions.transport = transport;\n\n    return this;\n  },\n\n  /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n  lastException: function() {\n    return this._lastCapturedException;\n  },\n\n  /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n  lastEventId: function() {\n    return this._lastEventId;\n  },\n\n  /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n  isSetup: function() {\n    if (!this._hasJSON) return false; // needs JSON support\n    if (!this._globalServer) {\n      if (!this.ravenNotConfiguredError) {\n        this.ravenNotConfiguredError = true;\n        this._logDebug('error', 'Error: Raven has not been configured.');\n      }\n      return false;\n    }\n    return true;\n  },\n\n  afterLoad: function() {\n    // TODO: remove window dependence?\n\n    // Attempt to initialize Raven on load\n    var RavenConfig = _window.RavenConfig;\n    if (RavenConfig) {\n      this.config(RavenConfig.dsn, RavenConfig.config).install();\n    }\n  },\n\n  showReportDialog: function(options) {\n    if (\n      !_document // doesn't work without a document (React native)\n    )\n      return;\n\n    options = options || {};\n\n    var lastEventId = options.eventId || this.lastEventId();\n    if (!lastEventId) {\n      throw new RavenConfigError('Missing eventId');\n    }\n\n    var dsn = options.dsn || this._dsn;\n    if (!dsn) {\n      throw new RavenConfigError('Missing DSN');\n    }\n\n    var encode = encodeURIComponent;\n    var qs = '';\n    qs += '?eventId=' + encode(lastEventId);\n    qs += '&dsn=' + encode(dsn);\n\n    var user = options.user || this._globalContext.user;\n    if (user) {\n      if (user.name) qs += '&name=' + encode(user.name);\n      if (user.email) qs += '&email=' + encode(user.email);\n    }\n\n    var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n    var script = _document.createElement('script');\n    script.async = true;\n    script.src = globalServer + '/api/embed/error-page/' + qs;\n    (_document.head || _document.body).appendChild(script);\n  },\n\n  /**** Private functions ****/\n  _ignoreNextOnError: function() {\n    var self = this;\n    this._ignoreOnError += 1;\n    setTimeout(function() {\n      // onerror should trigger before setTimeout\n      self._ignoreOnError -= 1;\n    });\n  },\n\n  _triggerEvent: function(eventType, options) {\n    // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n    var evt, key;\n\n    if (!this._hasDocument) return;\n\n    options = options || {};\n\n    eventType = 'raven' + eventType.substr(0, 1).toUpperCase() + eventType.substr(1);\n\n    if (_document.createEvent) {\n      evt = _document.createEvent('HTMLEvents');\n      evt.initEvent(eventType, true, true);\n    } else {\n      evt = _document.createEventObject();\n      evt.eventType = eventType;\n    }\n\n    for (key in options)\n      if (hasKey(options, key)) {\n        evt[key] = options[key];\n      }\n\n    if (_document.createEvent) {\n      // IE9 if standards\n      _document.dispatchEvent(evt);\n    } else {\n      // IE8 regardless of Quirks or Standards\n      // IE9 if quirks\n      try {\n        _document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n      } catch (e) {\n        // Do nothing\n      }\n    }\n  },\n\n  /**\n     * Wraps addEventListener to capture UI breadcrumbs\n     * @param evtName the event name (e.g. \"click\")\n     * @returns {Function}\n     * @private\n     */\n  _breadcrumbEventHandler: function(evtName) {\n    var self = this;\n    return function(evt) {\n      // reset keypress timeout; e.g. triggering a 'click' after\n      // a 'keypress' will reset the keypress debounce so that a new\n      // set of keypresses can be recorded\n      self._keypressTimeout = null;\n\n      // It's possible this handler might trigger multiple times for the same\n      // event (e.g. event propagation through node ancestors). Ignore if we've\n      // already captured the event.\n      if (self._lastCapturedEvent === evt) return;\n\n      self._lastCapturedEvent = evt;\n\n      // try/catch both:\n      // - accessing evt.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n      try {\n        target = htmlTreeAsString(evt.target);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      self.captureBreadcrumb({\n        category: 'ui.' + evtName, // e.g. ui.click, ui.input\n        message: target\n      });\n    };\n  },\n\n  /**\n     * Wraps addEventListener to capture keypress UI events\n     * @returns {Function}\n     * @private\n     */\n  _keypressEventHandler: function() {\n    var self = this,\n      debounceDuration = 1000; // milliseconds\n\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function(evt) {\n      var target;\n      try {\n        target = evt.target;\n      } catch (e) {\n        // just accessing event properties can throw an exception in some rare circumstances\n        // see: https://github.com/getsentry/raven-js/issues/838\n        return;\n      }\n      var tagName = target && target.tagName;\n\n      // only consider keypress events on actual input elements\n      // this will disregard keypresses targeting body (e.g. tabbing\n      // through elements, hotkeys, etc)\n      if (\n        !tagName ||\n        (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)\n      )\n        return;\n\n      // record first keypress in a series, but ignore subsequent\n      // keypresses until debounce clears\n      var timeout = self._keypressTimeout;\n      if (!timeout) {\n        self._breadcrumbEventHandler('input')(evt);\n      }\n      clearTimeout(timeout);\n      self._keypressTimeout = setTimeout(function() {\n        self._keypressTimeout = null;\n      }, debounceDuration);\n    };\n  },\n\n  /**\n     * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n     * @param to the originating URL\n     * @param from the target URL\n     * @private\n     */\n  _captureUrlChange: function(from, to) {\n    var parsedLoc = parseUrl(this._location.href);\n    var parsedTo = parseUrl(to);\n    var parsedFrom = parseUrl(from);\n\n    // because onpopstate only tells you the \"new\" (to) value of location.href, and\n    // not the previous (from) value, we need to track the value of the current URL\n    // state ourselves\n    this._lastHref = to;\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n      to = parsedTo.relative;\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n      from = parsedFrom.relative;\n\n    this.captureBreadcrumb({\n      category: 'navigation',\n      data: {\n        to: to,\n        from: from\n      }\n    });\n  },\n\n  /**\n     * Wrap timer functions and event targets to catch errors and provide\n     * better metadata.\n     */\n  _instrumentTryCatch: function() {\n    var self = this;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapTimeFn(orig) {\n      return function(fn, t) {\n        // preserve arity\n        // Make a copy of the arguments to prevent deoptimization\n        // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n          args[i] = arguments[i];\n        }\n        var originalCallback = args[0];\n        if (isFunction(originalCallback)) {\n          args[0] = self.wrap(originalCallback);\n        }\n\n        // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n        // also supports only two arguments and doesn't care what this is, so we\n        // can just call the original function directly.\n        if (orig.apply) {\n          return orig.apply(this, args);\n        } else {\n          return orig(args[0], args[1]);\n        }\n      };\n    }\n\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    function wrapEventTarget(global) {\n      var proto = _window[global] && _window[global].prototype;\n      if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n        fill(\n          proto,\n          'addEventListener',\n          function(orig) {\n            return function(evtName, fn, capture, secure) {\n              // preserve arity\n              try {\n                if (fn && fn.handleEvent) {\n                  fn.handleEvent = self.wrap(fn.handleEvent);\n                }\n              } catch (err) {\n                // can sometimes get 'Permission denied to access property \"handle Event'\n              }\n\n              // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n              // so that we don't have more than one wrapper function\n              var before, clickHandler, keypressHandler;\n\n              if (\n                autoBreadcrumbs &&\n                autoBreadcrumbs.dom &&\n                (global === 'EventTarget' || global === 'Node')\n              ) {\n                // NOTE: generating multiple handlers per addEventListener invocation, should\n                //       revisit and verify we can just use one (almost certainly)\n                clickHandler = self._breadcrumbEventHandler('click');\n                keypressHandler = self._keypressEventHandler();\n                before = function(evt) {\n                  // need to intercept every DOM event in `before` argument, in case that\n                  // same wrapped method is re-used for different events (e.g. mousemove THEN click)\n                  // see #724\n                  if (!evt) return;\n\n                  var eventType;\n                  try {\n                    eventType = evt.type;\n                  } catch (e) {\n                    // just accessing event properties can throw an exception in some rare circumstances\n                    // see: https://github.com/getsentry/raven-js/issues/838\n                    return;\n                  }\n                  if (eventType === 'click') return clickHandler(evt);\n                  else if (eventType === 'keypress') return keypressHandler(evt);\n                };\n              }\n              return orig.call(\n                this,\n                evtName,\n                self.wrap(fn, undefined, before),\n                capture,\n                secure\n              );\n            };\n          },\n          wrappedBuiltIns\n        );\n        fill(\n          proto,\n          'removeEventListener',\n          function(orig) {\n            return function(evt, fn, capture, secure) {\n              try {\n                fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__ : fn);\n              } catch (e) {\n                // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n              }\n              return orig.call(this, evt, fn, capture, secure);\n            };\n          },\n          wrappedBuiltIns\n        );\n      }\n    }\n\n    fill(_window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n    fill(_window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n    if (_window.requestAnimationFrame) {\n      fill(\n        _window,\n        'requestAnimationFrame',\n        function(orig) {\n          return function(cb) {\n            return orig(self.wrap(cb));\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // event targets borrowed from bugsnag-js:\n    // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n    var eventTargets = [\n      'EventTarget',\n      'Window',\n      'Node',\n      'ApplicationCache',\n      'AudioTrackList',\n      'ChannelMergerNode',\n      'CryptoOperation',\n      'EventSource',\n      'FileReader',\n      'HTMLUnknownElement',\n      'IDBDatabase',\n      'IDBRequest',\n      'IDBTransaction',\n      'KeyOperation',\n      'MediaController',\n      'MessagePort',\n      'ModalWindow',\n      'Notification',\n      'SVGElementInstance',\n      'Screen',\n      'TextTrack',\n      'TextTrackCue',\n      'TextTrackList',\n      'WebSocket',\n      'WebSocketWorker',\n      'Worker',\n      'XMLHttpRequest',\n      'XMLHttpRequestEventTarget',\n      'XMLHttpRequestUpload'\n    ];\n    for (var i = 0; i < eventTargets.length; i++) {\n      wrapEventTarget(eventTargets[i]);\n    }\n  },\n\n  /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - XMLHttpRequests\n     *  - DOM interactions (click/typing)\n     *  - window.location changes\n     *  - console\n     *\n     * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n     */\n  _instrumentBreadcrumbs: function() {\n    var self = this;\n    var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n    var wrappedBuiltIns = self._wrappedBuiltIns;\n\n    function wrapProp(prop, xhr) {\n      if (prop in xhr && isFunction(xhr[prop])) {\n        fill(xhr, prop, function(orig) {\n          return self.wrap(orig);\n        }); // intentionally don't track filled methods on XHR instances\n      }\n    }\n\n    if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in _window) {\n      var xhrproto = XMLHttpRequest.prototype;\n      fill(\n        xhrproto,\n        'open',\n        function(origOpen) {\n          return function(method, url) {\n            // preserve arity\n\n            // if Sentry key appears in URL, don't capture\n            if (isString(url) && url.indexOf(self._globalKey) === -1) {\n              this.__raven_xhr = {\n                method: method,\n                url: url,\n                status_code: null\n              };\n            }\n\n            return origOpen.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n\n      fill(\n        xhrproto,\n        'send',\n        function(origSend) {\n          return function(data) {\n            // preserve arity\n            var xhr = this;\n\n            function onreadystatechangeHandler() {\n              if (xhr.__raven_xhr && xhr.readyState === 4) {\n                try {\n                  // touching statusCode in some platforms throws\n                  // an exception\n                  xhr.__raven_xhr.status_code = xhr.status;\n                } catch (e) {\n                  /* do nothing */\n                }\n\n                self.captureBreadcrumb({\n                  type: 'http',\n                  category: 'xhr',\n                  data: xhr.__raven_xhr\n                });\n              }\n            }\n\n            var props = ['onload', 'onerror', 'onprogress'];\n            for (var j = 0; j < props.length; j++) {\n              wrapProp(props[j], xhr);\n            }\n\n            if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n              fill(\n                xhr,\n                'onreadystatechange',\n                function(orig) {\n                  return self.wrap(orig, undefined, onreadystatechangeHandler);\n                } /* intentionally don't track this instrumentation */\n              );\n            } else {\n              // if onreadystatechange wasn't actually set by the page on this xhr, we\n              // are free to set our own and capture the breadcrumb\n              xhr.onreadystatechange = onreadystatechangeHandler;\n            }\n\n            return origSend.apply(this, arguments);\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    if (autoBreadcrumbs.xhr && 'fetch' in _window) {\n      fill(\n        _window,\n        'fetch',\n        function(origFetch) {\n          return function(fn, t) {\n            // preserve arity\n            // Make a copy of the arguments to prevent deoptimization\n            // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n            var args = new Array(arguments.length);\n            for (var i = 0; i < args.length; ++i) {\n              args[i] = arguments[i];\n            }\n\n            var fetchInput = args[0];\n            var method = 'GET';\n            var url;\n\n            if (typeof fetchInput === 'string') {\n              url = fetchInput;\n            } else if ('Request' in _window && fetchInput instanceof _window.Request) {\n              url = fetchInput.url;\n              if (fetchInput.method) {\n                method = fetchInput.method;\n              }\n            } else {\n              url = '' + fetchInput;\n            }\n\n            if (args[1] && args[1].method) {\n              method = args[1].method;\n            }\n\n            var fetchData = {\n              method: method,\n              url: url,\n              status_code: null\n            };\n\n            self.captureBreadcrumb({\n              type: 'http',\n              category: 'fetch',\n              data: fetchData\n            });\n\n            return origFetch.apply(this, args).then(function(response) {\n              fetchData.status_code = response.status;\n\n              return response;\n            });\n          };\n        },\n        wrappedBuiltIns\n      );\n    }\n\n    // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n    if (autoBreadcrumbs.dom && this._hasDocument) {\n      if (_document.addEventListener) {\n        _document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n        _document.addEventListener('keypress', self._keypressEventHandler(), false);\n      } else {\n        // IE8 Compatibility\n        _document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n        _document.attachEvent('onkeypress', self._keypressEventHandler());\n      }\n    }\n\n    // record navigation (URL) changes\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var chrome = _window.chrome;\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasPushAndReplaceState =\n      !isChromePackagedApp &&\n      _window.history &&\n      history.pushState &&\n      history.replaceState;\n    if (autoBreadcrumbs.location && hasPushAndReplaceState) {\n      // TODO: remove onpopstate handler on uninstall()\n      var oldOnPopState = _window.onpopstate;\n      _window.onpopstate = function() {\n        var currentHref = self._location.href;\n        self._captureUrlChange(self._lastHref, currentHref);\n\n        if (oldOnPopState) {\n          return oldOnPopState.apply(this, arguments);\n        }\n      };\n\n      var historyReplacementFunction = function(origHistFunction) {\n        // note history.pushState.length is 0; intentionally not declaring\n        // params to preserve 0 arity\n        return function(/* state, title, url */) {\n          var url = arguments.length > 2 ? arguments[2] : undefined;\n\n          // url argument is optional\n          if (url) {\n            // coerce to string (this is what pushState does)\n            self._captureUrlChange(self._lastHref, url + '');\n          }\n\n          return origHistFunction.apply(this, arguments);\n        };\n      };\n\n      fill(history, 'pushState', historyReplacementFunction, wrappedBuiltIns);\n      fill(history, 'replaceState', historyReplacementFunction, wrappedBuiltIns);\n    }\n\n    if (autoBreadcrumbs.console && 'console' in _window && console.log) {\n      // console\n      var consoleMethodCallback = function(msg, data) {\n        self.captureBreadcrumb({\n          message: msg,\n          level: data.level,\n          category: 'console'\n        });\n      };\n\n      each(['debug', 'info', 'warn', 'error', 'log'], function(_, level) {\n        wrapConsoleMethod(console, level, consoleMethodCallback);\n      });\n    }\n  },\n\n  _restoreBuiltIns: function() {\n    // restore any wrapped builtins\n    var builtin;\n    while (this._wrappedBuiltIns.length) {\n      builtin = this._wrappedBuiltIns.shift();\n\n      var obj = builtin[0],\n        name = builtin[1],\n        orig = builtin[2];\n\n      obj[name] = orig;\n    }\n  },\n\n  _drainPlugins: function() {\n    var self = this;\n\n    // FIX ME TODO\n    each(this._plugins, function(_, plugin) {\n      var installer = plugin[0];\n      var args = plugin[1];\n      installer.apply(self, [self].concat(args));\n    });\n  },\n\n  _parseDSN: function(str) {\n    var m = dsnPattern.exec(str),\n      dsn = {},\n      i = 7;\n\n    try {\n      while (i--) dsn[dsnKeys[i]] = m[i] || '';\n    } catch (e) {\n      throw new RavenConfigError('Invalid DSN: ' + str);\n    }\n\n    if (dsn.pass && !this._globalOptions.allowSecretKey) {\n      throw new RavenConfigError(\n        'Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key'\n      );\n    }\n\n    return dsn;\n  },\n\n  _getGlobalServer: function(uri) {\n    // assemble the endpoint from the uri pieces\n    var globalServer = '//' + uri.host + (uri.port ? ':' + uri.port : '');\n\n    if (uri.protocol) {\n      globalServer = uri.protocol + ':' + globalServer;\n    }\n    return globalServer;\n  },\n\n  _handleOnErrorStackInfo: function() {\n    // if we are intentionally ignoring errors via onerror, bail out\n    if (!this._ignoreOnError) {\n      this._handleStackInfo.apply(this, arguments);\n    }\n  },\n\n  _handleStackInfo: function(stackInfo, options) {\n    var frames = this._prepareFrames(stackInfo, options);\n\n    this._triggerEvent('handle', {\n      stackInfo: stackInfo,\n      options: options\n    });\n\n    this._processException(\n      stackInfo.name,\n      stackInfo.message,\n      stackInfo.url,\n      stackInfo.lineno,\n      frames,\n      options\n    );\n  },\n\n  _prepareFrames: function(stackInfo, options) {\n    var self = this;\n    var frames = [];\n    if (stackInfo.stack && stackInfo.stack.length) {\n      each(stackInfo.stack, function(i, stack) {\n        var frame = self._normalizeFrame(stack, stackInfo.url);\n        if (frame) {\n          frames.push(frame);\n        }\n      });\n\n      // e.g. frames captured via captureMessage throw\n      if (options && options.trimHeadFrames) {\n        for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n          frames[j].in_app = false;\n        }\n      }\n    }\n    frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n    return frames;\n  },\n\n  _normalizeFrame: function(frame, stackInfoUrl) {\n    // normalize the frames data\n    var normalized = {\n      filename: frame.url,\n      lineno: frame.line,\n      colno: frame.column,\n      function: frame.func || '?'\n    };\n\n    // Case when we don't have any information about the error\n    // E.g. throwing a string or raw object, instead of an `Error` in Firefox\n    // Generating synthetic error doesn't add any value here\n    //\n    // We should probably somehow let a user know that they should fix their code\n    if (!frame.url) {\n      normalized.filename = stackInfoUrl; // fallback to whole stacks url from onerror handler\n    }\n\n    normalized.in_app = !// determine if an exception came from outside of our app\n    // first we check the global includePaths list.\n    (\n      (!!this._globalOptions.includePaths.test &&\n        !this._globalOptions.includePaths.test(normalized.filename)) ||\n      // Now we check for fun, if the function name is Raven or TraceKit\n      /(Raven|TraceKit)\\./.test(normalized['function']) ||\n      // finally, we do a last ditch effort and check for raven.min.js\n      /raven\\.(min\\.)?js$/.test(normalized.filename)\n    );\n\n    return normalized;\n  },\n\n  _processException: function(type, message, fileurl, lineno, frames, options) {\n    var prefixedMessage = (type ? type + ': ' : '') + (message || '');\n    if (\n      !!this._globalOptions.ignoreErrors.test &&\n      (this._globalOptions.ignoreErrors.test(message) ||\n        this._globalOptions.ignoreErrors.test(prefixedMessage))\n    ) {\n      return;\n    }\n\n    var stacktrace;\n\n    if (frames && frames.length) {\n      fileurl = frames[0].filename || fileurl;\n      // Sentry expects frames oldest to newest\n      // and JS sends them as newest to oldest\n      frames.reverse();\n      stacktrace = {frames: frames};\n    } else if (fileurl) {\n      stacktrace = {\n        frames: [\n          {\n            filename: fileurl,\n            lineno: lineno,\n            in_app: true\n          }\n        ]\n      };\n    }\n\n    if (\n      !!this._globalOptions.ignoreUrls.test &&\n      this._globalOptions.ignoreUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    if (\n      !!this._globalOptions.whitelistUrls.test &&\n      !this._globalOptions.whitelistUrls.test(fileurl)\n    ) {\n      return;\n    }\n\n    var data = objectMerge(\n      {\n        // sentry.interfaces.Exception\n        exception: {\n          values: [\n            {\n              type: type,\n              value: message,\n              stacktrace: stacktrace\n            }\n          ]\n        },\n        culprit: fileurl\n      },\n      options\n    );\n\n    // Fire away!\n    this._send(data);\n  },\n\n  _trimPacket: function(data) {\n    // For now, we only want to truncate the two different messages\n    // but this could/should be expanded to just trim everything\n    var max = this._globalOptions.maxMessageLength;\n    if (data.message) {\n      data.message = truncate(data.message, max);\n    }\n    if (data.exception) {\n      var exception = data.exception.values[0];\n      exception.value = truncate(exception.value, max);\n    }\n\n    var request = data.request;\n    if (request) {\n      if (request.url) {\n        request.url = truncate(request.url, this._globalOptions.maxUrlLength);\n      }\n      if (request.Referer) {\n        request.Referer = truncate(request.Referer, this._globalOptions.maxUrlLength);\n      }\n    }\n\n    if (data.breadcrumbs && data.breadcrumbs.values)\n      this._trimBreadcrumbs(data.breadcrumbs);\n\n    return data;\n  },\n\n  /**\n     * Truncate breadcrumb values (right now just URLs)\n     */\n  _trimBreadcrumbs: function(breadcrumbs) {\n    // known breadcrumb properties with urls\n    // TODO: also consider arbitrary prop values that start with (https?)?://\n    var urlProps = ['to', 'from', 'url'],\n      urlProp,\n      crumb,\n      data;\n\n    for (var i = 0; i < breadcrumbs.values.length; ++i) {\n      crumb = breadcrumbs.values[i];\n      if (\n        !crumb.hasOwnProperty('data') ||\n        !isObject(crumb.data) ||\n        objectFrozen(crumb.data)\n      )\n        continue;\n\n      data = objectMerge({}, crumb.data);\n      for (var j = 0; j < urlProps.length; ++j) {\n        urlProp = urlProps[j];\n        if (data.hasOwnProperty(urlProp) && data[urlProp]) {\n          data[urlProp] = truncate(data[urlProp], this._globalOptions.maxUrlLength);\n        }\n      }\n      breadcrumbs.values[i].data = data;\n    }\n  },\n\n  _getHttpData: function() {\n    if (!this._hasNavigator && !this._hasDocument) return;\n    var httpData = {};\n\n    if (this._hasNavigator && _navigator.userAgent) {\n      httpData.headers = {\n        'User-Agent': navigator.userAgent\n      };\n    }\n\n    if (this._hasDocument) {\n      if (_document.location && _document.location.href) {\n        httpData.url = _document.location.href;\n      }\n      if (_document.referrer) {\n        if (!httpData.headers) httpData.headers = {};\n        httpData.headers.Referer = _document.referrer;\n      }\n    }\n\n    return httpData;\n  },\n\n  _resetBackoff: function() {\n    this._backoffDuration = 0;\n    this._backoffStart = null;\n  },\n\n  _shouldBackoff: function() {\n    return this._backoffDuration && now() - this._backoffStart < this._backoffDuration;\n  },\n\n  /**\n     * Returns true if the in-process data payload matches the signature\n     * of the previously-sent data\n     *\n     * NOTE: This has to be done at this level because TraceKit can generate\n     *       data from window.onerror WITHOUT an exception object (IE8, IE9,\n     *       other old browsers). This can take the form of an \"exception\"\n     *       data object with a single frame (derived from the onerror args).\n     */\n  _isRepeatData: function(current) {\n    var last = this._lastData;\n\n    if (\n      !last ||\n      current.message !== last.message || // defined for captureMessage\n      current.culprit !== last.culprit // defined for captureException/onerror\n    )\n      return false;\n\n    // Stacktrace interface (i.e. from captureMessage)\n    if (current.stacktrace || last.stacktrace) {\n      return isSameStacktrace(current.stacktrace, last.stacktrace);\n    } else if (current.exception || last.exception) {\n      // Exception interface (i.e. from captureException/onerror)\n      return isSameException(current.exception, last.exception);\n    }\n\n    return true;\n  },\n\n  _setBackoffState: function(request) {\n    // If we are already in a backoff state, don't change anything\n    if (this._shouldBackoff()) {\n      return;\n    }\n\n    var status = request.status;\n\n    // 400 - project_id doesn't exist or some other fatal\n    // 401 - invalid/revoked dsn\n    // 429 - too many requests\n    if (!(status === 400 || status === 401 || status === 429)) return;\n\n    var retry;\n    try {\n      // If Retry-After is not in Access-Control-Expose-Headers, most\n      // browsers will throw an exception trying to access it\n      retry = request.getResponseHeader('Retry-After');\n      retry = parseInt(retry, 10) * 1000; // Retry-After is returned in seconds\n    } catch (e) {\n      /* eslint no-empty:0 */\n    }\n\n    this._backoffDuration = retry\n      ? // If Sentry server returned a Retry-After value, use it\n        retry\n      : // Otherwise, double the last backoff duration (starts at 1 sec)\n        this._backoffDuration * 2 || 1000;\n\n    this._backoffStart = now();\n  },\n\n  _send: function(data) {\n    var globalOptions = this._globalOptions;\n\n    var baseData = {\n        project: this._globalProject,\n        logger: globalOptions.logger,\n        platform: 'javascript'\n      },\n      httpData = this._getHttpData();\n\n    if (httpData) {\n      baseData.request = httpData;\n    }\n\n    // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n    if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n    data = objectMerge(baseData, data);\n\n    // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n    data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n    data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n    // Send along our own collected metadata with extra\n    data.extra['session:duration'] = now() - this._startTime;\n\n    if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n      // intentionally make shallow copy so that additions\n      // to breadcrumbs aren't accidentally sent in this request\n      data.breadcrumbs = {\n        values: [].slice.call(this._breadcrumbs, 0)\n      };\n    }\n\n    // If there are no tags/extra, strip the key from the payload alltogther.\n    if (isEmptyObject(data.tags)) delete data.tags;\n\n    if (this._globalContext.user) {\n      // sentry.interfaces.User\n      data.user = this._globalContext.user;\n    }\n\n    // Include the environment if it's defined in globalOptions\n    if (globalOptions.environment) data.environment = globalOptions.environment;\n\n    // Include the release if it's defined in globalOptions\n    if (globalOptions.release) data.release = globalOptions.release;\n\n    // Include server_name if it's defined in globalOptions\n    if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n    if (isFunction(globalOptions.dataCallback)) {\n      data = globalOptions.dataCallback(data) || data;\n    }\n\n    // Why??????????\n    if (!data || isEmptyObject(data)) {\n      return;\n    }\n\n    // Check if the request should be filtered or not\n    if (\n      isFunction(globalOptions.shouldSendCallback) &&\n      !globalOptions.shouldSendCallback(data)\n    ) {\n      return;\n    }\n\n    // Backoff state: Sentry server previously responded w/ an error (e.g. 429 - too many requests),\n    // so drop requests until \"cool-off\" period has elapsed.\n    if (this._shouldBackoff()) {\n      this._logDebug('warn', 'Raven dropped error due to backoff: ', data);\n      return;\n    }\n\n    if (typeof globalOptions.sampleRate === 'number') {\n      if (Math.random() < globalOptions.sampleRate) {\n        this._sendProcessedPayload(data);\n      }\n    } else {\n      this._sendProcessedPayload(data);\n    }\n  },\n\n  _getUuid: function() {\n    return uuid4();\n  },\n\n  _sendProcessedPayload: function(data, callback) {\n    var self = this;\n    var globalOptions = this._globalOptions;\n\n    if (!this.isSetup()) return;\n\n    // Try and clean up the packet before sending by truncating long values\n    data = this._trimPacket(data);\n\n    // ideally duplicate error testing should occur *before* dataCallback/shouldSendCallback,\n    // but this would require copying an un-truncated copy of the data packet, which can be\n    // arbitrarily deep (extra_data) -- could be worthwhile? will revisit\n    if (!this._globalOptions.allowDuplicates && this._isRepeatData(data)) {\n      this._logDebug('warn', 'Raven dropped repeat event: ', data);\n      return;\n    }\n\n    // Send along an event_id if not explicitly passed.\n    // This event_id can be used to reference the error within Sentry itself.\n    // Set lastEventId after we know the error should actually be sent\n    this._lastEventId = data.event_id || (data.event_id = this._getUuid());\n\n    // Store outbound payload after trim\n    this._lastData = data;\n\n    this._logDebug('debug', 'Raven about to send:', data);\n\n    var auth = {\n      sentry_version: '7',\n      sentry_client: 'raven-js/' + this.VERSION,\n      sentry_key: this._globalKey\n    };\n\n    if (this._globalSecret) {\n      auth.sentry_secret = this._globalSecret;\n    }\n\n    var exception = data.exception && data.exception.values[0];\n    this.captureBreadcrumb({\n      category: 'sentry',\n      message: exception\n        ? (exception.type ? exception.type + ': ' : '') + exception.value\n        : data.message,\n      event_id: data.event_id,\n      level: data.level || 'error' // presume error unless specified\n    });\n\n    var url = this._globalEndpoint;\n    (globalOptions.transport || this._makeRequest).call(this, {\n      url: url,\n      auth: auth,\n      data: data,\n      options: globalOptions,\n      onSuccess: function success() {\n        self._resetBackoff();\n\n        self._triggerEvent('success', {\n          data: data,\n          src: url\n        });\n        callback && callback();\n      },\n      onError: function failure(error) {\n        self._logDebug('error', 'Raven transport failed to send: ', error);\n\n        if (error.request) {\n          self._setBackoffState(error.request);\n        }\n\n        self._triggerEvent('failure', {\n          data: data,\n          src: url\n        });\n        error = error || new Error('Raven send failed (no additional details provided)');\n        callback && callback(error);\n      }\n    });\n  },\n\n  _makeRequest: function(opts) {\n    var request = _window.XMLHttpRequest && new _window.XMLHttpRequest();\n    if (!request) return;\n\n    // if browser doesn't support CORS (e.g. IE7), we are out of luck\n    var hasCORS = 'withCredentials' in request || typeof XDomainRequest !== 'undefined';\n\n    if (!hasCORS) return;\n\n    var url = opts.url;\n\n    if ('withCredentials' in request) {\n      request.onreadystatechange = function() {\n        if (request.readyState !== 4) {\n          return;\n        } else if (request.status === 200) {\n          opts.onSuccess && opts.onSuccess();\n        } else if (opts.onError) {\n          var err = new Error('Sentry error code: ' + request.status);\n          err.request = request;\n          opts.onError(err);\n        }\n      };\n    } else {\n      request = new XDomainRequest();\n      // xdomainrequest cannot go http -> https (or vice versa),\n      // so always use protocol relative\n      url = url.replace(/^https?:/, '');\n\n      // onreadystatechange not supported by XDomainRequest\n      if (opts.onSuccess) {\n        request.onload = opts.onSuccess;\n      }\n      if (opts.onError) {\n        request.onerror = function() {\n          var err = new Error('Sentry error code: XDomainRequest');\n          err.request = request;\n          opts.onError(err);\n        };\n      }\n    }\n\n    // NOTE: auth is intentionally sent as part of query string (NOT as custom\n    //       HTTP header) so as to avoid preflight CORS requests\n    request.open('POST', url + '?' + urlencode(opts.auth));\n    request.send(stringify(opts.data));\n  },\n\n  _logDebug: function(level) {\n    if (this._originalConsoleMethods[level] && this.debug) {\n      // In IE<10 console methods do not have their own 'apply' method\n      Function.prototype.apply.call(\n        this._originalConsoleMethods[level],\n        this._originalConsole,\n        [].slice.call(arguments, 1)\n      );\n    }\n  },\n\n  _mergeContext: function(key, context) {\n    if (isUndefined(context)) {\n      delete this._globalContext[key];\n    } else {\n      this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n    }\n  }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n","var utils = require('../../src/utils');\n\n/*\n TraceKit - Cross brower stack traces\n\n This was originally forked from github.com/occ/TraceKit, but has since been\n largely re-written and is now maintained as part of raven-js.  Tests for\n this are in test/vendor.\n\n MIT license\n*/\n\nvar TraceKit = {\n  collectWindowErrors: true,\n  debug: false\n};\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n\nfunction getLocationHref() {\n  if (typeof document === 'undefined' || document.location == null) return '';\n\n  return document.location.href;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n  var handlers = [],\n    lastArgs = null,\n    lastException = null,\n    lastExceptionStack = null;\n\n  /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n  function subscribe(handler) {\n    installGlobalHandler();\n    handlers.push(handler);\n  }\n\n  /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n  function unsubscribe(handler) {\n    for (var i = handlers.length - 1; i >= 0; --i) {\n      if (handlers[i] === handler) {\n        handlers.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n     * Remove all crash handlers.\n     */\n  function unsubscribeAll() {\n    uninstallGlobalHandler();\n    handlers = [];\n  }\n\n  /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n  function notifyHandlers(stack, isWindowError) {\n    var exception = null;\n    if (isWindowError && !TraceKit.collectWindowErrors) {\n      return;\n    }\n    for (var i in handlers) {\n      if (handlers.hasOwnProperty(i)) {\n        try {\n          handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n        } catch (inner) {\n          exception = inner;\n        }\n      }\n    }\n\n    if (exception) {\n      throw exception;\n    }\n  }\n\n  var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n  /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} colNo The column number at which the error\n     * occurred.\n     * @param {?Error} ex The actual Error object.\n     */\n  function traceKitWindowOnError(message, url, lineNo, colNo, ex) {\n    var stack = null;\n\n    if (lastExceptionStack) {\n      TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(\n        lastExceptionStack,\n        url,\n        lineNo,\n        message\n      );\n      processLastException();\n    } else if (ex && utils.isError(ex)) {\n      // non-string `ex` arg; attempt to extract stack trace\n\n      // New chrome and blink send along a real error object\n      // Let's just report that like a normal error.\n      // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n      stack = TraceKit.computeStackTrace(ex);\n      notifyHandlers(stack, true);\n    } else {\n      var location = {\n        url: url,\n        line: lineNo,\n        column: colNo\n      };\n\n      var name = undefined;\n      var msg = message; // must be new var or will modify original `arguments`\n      var groups;\n      if ({}.toString.call(message) === '[object String]') {\n        var groups = message.match(ERROR_TYPES_RE);\n        if (groups) {\n          name = groups[1];\n          msg = groups[2];\n        }\n      }\n\n      location.func = UNKNOWN_FUNCTION;\n\n      stack = {\n        name: name,\n        message: msg,\n        url: getLocationHref(),\n        stack: [location]\n      };\n      notifyHandlers(stack, true);\n    }\n\n    if (_oldOnerrorHandler) {\n      return _oldOnerrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  }\n\n  function installGlobalHandler() {\n    if (_onErrorHandlerInstalled) {\n      return;\n    }\n    _oldOnerrorHandler = _window.onerror;\n    _window.onerror = traceKitWindowOnError;\n    _onErrorHandlerInstalled = true;\n  }\n\n  function uninstallGlobalHandler() {\n    if (!_onErrorHandlerInstalled) {\n      return;\n    }\n    _window.onerror = _oldOnerrorHandler;\n    _onErrorHandlerInstalled = false;\n    _oldOnerrorHandler = undefined;\n  }\n\n  function processLastException() {\n    var _lastExceptionStack = lastExceptionStack,\n      _lastArgs = lastArgs;\n    lastArgs = null;\n    lastExceptionStack = null;\n    lastException = null;\n    notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n  }\n\n  /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\n     * Only used for window.onerror to not cause an infinite loop of\n     * rethrowing.\n     */\n  function report(ex, rethrow) {\n    var args = _slice.call(arguments, 1);\n    if (lastExceptionStack) {\n      if (lastException === ex) {\n        return; // already caught by an inner catch block, ignore\n      } else {\n        processLastException();\n      }\n    }\n\n    var stack = TraceKit.computeStackTrace(ex);\n    lastExceptionStack = stack;\n    lastException = ex;\n    lastArgs = args;\n\n    // If the stack trace is incomplete, wait for 2 seconds for\n    // slow slow IE to see if onerror occurs or not before reporting\n    // this exception; otherwise, we will end up with an incomplete\n    // stack trace\n    setTimeout(function() {\n      if (lastException === ex) {\n        processLastException();\n      }\n    }, stack.incomplete ? 2000 : 0);\n\n    if (rethrow !== false) {\n      throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n  }\n\n  report.subscribe = subscribe;\n  report.unsubscribe = unsubscribe;\n  report.uninstall = unsubscribeAll;\n  return report;\n})();\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n  // Contents of Exception in various browsers.\n  //\n  // SAFARI:\n  // ex.message = Can't find variable: qq\n  // ex.line = 59\n  // ex.sourceId = 580238192\n  // ex.sourceURL = http://...\n  // ex.expressionBeginOffset = 96\n  // ex.expressionCaretOffset = 98\n  // ex.expressionEndOffset = 98\n  // ex.name = ReferenceError\n  //\n  // FIREFOX:\n  // ex.message = qq is not defined\n  // ex.fileName = http://...\n  // ex.lineNumber = 59\n  // ex.columnNumber = 69\n  // ex.stack = ...stack trace... (see the example below)\n  // ex.name = ReferenceError\n  //\n  // CHROME:\n  // ex.message = qq is not defined\n  // ex.name = ReferenceError\n  // ex.type = not_defined\n  // ex.arguments = ['aa']\n  // ex.stack = ...stack trace...\n  //\n  // INTERNET EXPLORER:\n  // ex.message = ...\n  // ex.name = ReferenceError\n  //\n  // OPERA:\n  // ex.message = ...message... (see the example below)\n  // ex.name = ReferenceError\n  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n  /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n  function computeStackTraceFromStackProp(ex) {\n    if (typeof ex.stack === 'undefined' || !ex.stack) return;\n\n    var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n      gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n      winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n      // Used to additionally parse URL/line/column from eval frames\n      geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\n      chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\n      lines = ex.stack.split('\\n'),\n      stack = [],\n      submatch,\n      parts,\n      element,\n      reference = /^(.*) is undefined$/.exec(ex.message);\n\n    for (var i = 0, j = lines.length; i < j; ++i) {\n      if ((parts = chrome.exec(lines[i]))) {\n        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n        var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n          parts[3] = submatch[2]; // line\n          parts[4] = submatch[3]; // column\n        }\n        element = {\n          url: !isNative ? parts[2] : null,\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: isNative ? [parts[2]] : [],\n          line: parts[3] ? +parts[3] : null,\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = winjs.exec(lines[i]))) {\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: [],\n          line: +parts[3],\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if ((parts = gecko.exec(lines[i]))) {\n        var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = null; // no column when eval\n        } else if (i === 0 && !parts[5] && typeof ex.columnNumber !== 'undefined') {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          stack[0].column = ex.columnNumber + 1;\n        }\n        element = {\n          url: parts[3],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: parts[2] ? parts[2].split(',') : [],\n          line: parts[4] ? +parts[4] : null,\n          column: parts[5] ? +parts[5] : null\n        };\n      } else {\n        continue;\n      }\n\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      stack.push(element);\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n  }\n\n  /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n  function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n    var initial = {\n      url: url,\n      line: lineNo\n    };\n\n    if (initial.url && initial.line) {\n      stackInfo.incomplete = false;\n\n      if (!initial.func) {\n        initial.func = UNKNOWN_FUNCTION;\n      }\n\n      if (stackInfo.stack.length > 0) {\n        if (stackInfo.stack[0].url === initial.url) {\n          if (stackInfo.stack[0].line === initial.line) {\n            return false; // already in stack trace\n          } else if (\n            !stackInfo.stack[0].line &&\n            stackInfo.stack[0].func === initial.func\n          ) {\n            stackInfo.stack[0].line = initial.line;\n            return false;\n          }\n        }\n      }\n\n      stackInfo.stack.unshift(initial);\n      stackInfo.partial = true;\n      return true;\n    } else {\n      stackInfo.incomplete = true;\n    }\n\n    return false;\n  }\n\n  /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n  function computeStackTraceByWalkingCallerChain(ex, depth) {\n    var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n      stack = [],\n      funcs = {},\n      recursion = false,\n      parts,\n      item,\n      source;\n\n    for (\n      var curr = computeStackTraceByWalkingCallerChain.caller;\n      curr && !recursion;\n      curr = curr.caller\n    ) {\n      if (curr === computeStackTrace || curr === TraceKit.report) {\n        // console.log('skipping internal function');\n        continue;\n      }\n\n      item = {\n        url: null,\n        func: UNKNOWN_FUNCTION,\n        line: null,\n        column: null\n      };\n\n      if (curr.name) {\n        item.func = curr.name;\n      } else if ((parts = functionName.exec(curr.toString()))) {\n        item.func = parts[1];\n      }\n\n      if (typeof item.func === 'undefined') {\n        try {\n          item.func = parts.input.substring(0, parts.input.indexOf('{'));\n        } catch (e) {}\n      }\n\n      if (funcs['' + curr]) {\n        recursion = true;\n      } else {\n        funcs['' + curr] = true;\n      }\n\n      stack.push(item);\n    }\n\n    if (depth) {\n      // console.log('depth is ' + depth);\n      // console.log('stack is ' + stack.length);\n      stack.splice(0, depth);\n    }\n\n    var result = {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref(),\n      stack: stack\n    };\n    augmentStackTraceWithInitialElement(\n      result,\n      ex.sourceURL || ex.fileName,\n      ex.line || ex.lineNumber,\n      ex.message || ex.description\n    );\n    return result;\n  }\n\n  /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n  function computeStackTrace(ex, depth) {\n    var stack = null;\n    depth = depth == null ? 0 : +depth;\n\n    try {\n      stack = computeStackTraceFromStackProp(ex);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n\n    try {\n      stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {\n      if (TraceKit.debug) {\n        throw e;\n      }\n    }\n    return {\n      name: ex.name,\n      message: ex.message,\n      url: getLocationHref()\n    };\n  }\n\n  computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n  computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n\n  return computeStackTrace;\n})();\n\nmodule.exports = TraceKit;\n","/*\n json-stringify-safe\n Like JSON.stringify, but doesn't throw on circular references.\n\n Originally forked from https://github.com/isaacs/json-stringify-safe\n version 5.0.1 on 3/8/2017 and modified to handle Errors serialization\n and IE8 compatibility. Tests for this are in test/vendor.\n\n ISC license: https://github.com/isaacs/json-stringify-safe/blob/master/LICENSE\n*/\n\nexports = module.exports = stringify;\nexports.getSerialize = serializer;\n\nfunction indexOf(haystack, needle) {\n  for (var i = 0; i < haystack.length; ++i) {\n    if (haystack[i] === needle) return i;\n  }\n  return -1;\n}\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces);\n}\n\n// https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\nfunction stringifyError(value) {\n  var err = {\n    // These properties are implemented as magical getters and don't show up in for in\n    stack: value.stack,\n    message: value.message,\n    name: value.name\n  };\n\n  for (var i in value) {\n    if (Object.prototype.hasOwnProperty.call(value, i)) {\n      err[i] = value[i];\n    }\n  }\n\n  return err;\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [];\n  var keys = [];\n\n  if (cycleReplacer == null) {\n    cycleReplacer = function(key, value) {\n      if (stack[0] === value) {\n        return '[Circular ~]';\n      }\n      return '[Circular ~.' + keys.slice(0, indexOf(stack, value)).join('.') + ']';\n    };\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = indexOf(stack, this);\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this);\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key);\n\n      if (~indexOf(stack, value)) {\n        value = cycleReplacer.call(this, key, value);\n      }\n    } else {\n      stack.push(value);\n    }\n\n    return replacer == null\n      ? value instanceof Error ? stringifyError(value) : value\n      : replacer.call(this, key, value);\n  };\n}\n","function RavenConfigError(message) {\n  this.name = 'RavenConfigError';\n  this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n","var wrapMethod = function(console, level, callback) {\n  var originalConsoleLevel = console[level];\n  var originalConsole = console;\n\n  if (!(level in console)) {\n    return;\n  }\n\n  var sentryLevel = level === 'warn' ? 'warning' : level;\n\n  console[level] = function() {\n    var args = [].slice.call(arguments);\n\n    var msg = '' + args.join(' ');\n    var data = {level: sentryLevel, logger: 'console', extra: {arguments: args}};\n\n    if (level === 'assert') {\n      if (args[0] === false) {\n        // Default browsers message\n        msg = 'Assertion failed: ' + (args.slice(1).join(' ') || 'console.assert');\n        data.extra.arguments = args.slice(1);\n        callback && callback(msg, data);\n      }\n    } else {\n      callback && callback(msg, data);\n    }\n\n    // this fails for some browsers. :(\n    if (originalConsoleLevel) {\n      // IE9 doesn't allow calling apply on console functions directly\n      // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n      Function.prototype.apply.call(originalConsoleLevel, originalConsole, args);\n    }\n  };\n};\n\nmodule.exports = {\n  wrapMethod: wrapMethod\n};\n","(function() { module.exports = window[\"jQuery\"]; }());","import Raven from 'raven-js';\nimport {\n  env,\n  phpVersion,\n  wpVersion,\n  leadinPluginVersion,\n  portalId,\n  plugins,\n} from '../constants/leadinConfig';\n\nexport function configureRaven() {\n  if (env !== 'prod') {\n    return;\n  }\n\n  Raven.config(\n    'https://e9b8f382cdd130c0d415cd977d2be56f@exceptions.hubspot.com/1',\n    {\n      instrument: {\n        tryCatch: false,\n      },\n    }\n  ).install();\n\n  Raven.setTagsContext({\n    leadin: leadinPluginVersion,\n    php: phpVersion,\n    wordpress: wpVersion,\n  });\n\n  Raven.setUserContext({\n    hub: portalId,\n    plugins: Object.keys(plugins)\n      .map(name => `${name}#${plugins[name].Version}`)\n      .join(','),\n  });\n}\n\nexport default Raven;\n","export const domElements = {\n  iframe: '#leadin-iframe',\n  subMenuButtons: '.toplevel_page_leadin > ul > li',\n  deactivatePluginButton: '[data-slug=\"leadin\"] .deactivate a',\n  deactivateFeedbackForm: 'form.leadin-deactivate-form',\n  deactivateFeedbackSubmit: 'button#leadin-feedback-submit',\n  deactivateFeedbackSkip: 'button#leadin-feedback-skip',\n  thickboxModalClose: '.leadin-modal-close',\n  thickboxModalWindow: 'div#TB_window.thickbox-loading',\n  thickboxModalContent: 'div#TB_ajaxContent.TB_modal',\n};\n","import $ from 'jquery';\nimport { domElements } from '../constants/selectors';\n\nexport default class ThickBoxModal {\n  constructor(\n    openTriggerSelector,\n    inlineContentId,\n    windowCssClass,\n    contentCssClass\n  ) {\n    this.openTriggerSelector = openTriggerSelector;\n    this.inlineContentId = inlineContentId;\n    this.windowCssClass = windowCssClass;\n    this.contentCssClass = contentCssClass;\n\n    $(openTriggerSelector).click(this.init.bind(this));\n  }\n\n  close() {\n    window.tb_remove();\n  }\n\n  init(e) {\n    window.tb_show(\n      '',\n      `#TB_inline?inlineId=${this.inlineContentId}&modal=true`\n    );\n    // thickbox doesn't respect the width and height url parameters https://core.trac.wordpress.org/ticket/17249\n    // We override thickboxes css with !important in the css\n    $(domElements.thickboxModalWindow).addClass(this.windowCssClass);\n\n    // have to modify the css of the thickbox content container as well\n    $(domElements.thickboxModalContent).addClass(this.contentCssClass);\n\n    // we unbind previous handlers because a thickbox modal is a single global object.\n    // Everytime it is re-opened, it still has old handlers bound\n    $(domElements.thickboxModalClose)\n      .unbind('click')\n      .click(this.close);\n\n    e.preventDefault();\n  }\n}\n","import $ from 'jquery';\n\nconst portalId = '6275621';\nconst formId = '0e8807f8-2ac3-4664-b742-44552bfa09e2';\nconst formSubmissionUrl = `https://api.hsforms.com/submissions/v3/integration/submit/${portalId}/${formId}`;\n\nexport function submitFeedbackForm(formSelector) {\n  const formSubmissionPayload = {\n    fields: $(formSelector).serializeArray(),\n    skipValidation: true,\n  };\n\n  return new Promise((resolve, reject) => {\n    $.ajax({\n      type: 'POST',\n      url: formSubmissionUrl,\n      contentType: 'application/json',\n      data: JSON.stringify(formSubmissionPayload),\n      success: resolve,\n      error: reject,\n    });\n  });\n}\n","import $ from 'jquery';\n\nimport Raven, { configureRaven } from '../lib/Raven';\nimport { domElements } from '../constants/selectors';\nimport ThickBoxModal from './ThickBoxModal';\nimport { submitFeedbackForm } from './feedbackFormApi';\n\nfunction deactivatePlugin() {\n  window.location.href = $(domElements.deactivatePluginButton).attr('href');\n}\n\nfunction setLoadingState() {\n  $(domElements.deactivateFeedbackSubmit).addClass('loading');\n}\n\nfunction submitAndDeactivate(e) {\n  e.preventDefault();\n  setLoadingState();\n\n  submitFeedbackForm(domElements.deactivateFeedbackForm)\n    .then(deactivatePlugin)\n    .catch(err => {\n      Raven.captureException(err);\n      deactivatePlugin();\n    });\n}\n\nfunction init() {\n  // eslint-disable-next-line no-unused-vars\n  const feedbackModal = new ThickBoxModal(\n    domElements.deactivatePluginButton,\n    'leadin-feedback-container',\n    'leadin-feedback-window',\n    'leadin-feedback-content'\n  );\n\n  $(domElements.deactivateFeedbackForm)\n    .unbind('submit')\n    .submit(submitAndDeactivate);\n  $(domElements.deactivateFeedbackSkip)\n    .unbind('click')\n    .click(deactivatePlugin);\n}\n\n$(document).ready(() => {\n  configureRaven();\n  Raven.context(init);\n});\n","/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\nvar RavenConstructor = require('./raven');\n\n// This is to be defensive in environments where window does not exist (see https://github.com/getsentry/raven-js/pull/785)\nvar _window =\n  typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nvar _Raven = _window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function() {\n  _window.Raven = _Raven;\n  return Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}